# !/usr/bin/env Rscript
# ==============================================================================
# Calculate network features with soft thresholded adjacency matrix
#
# Script by Gabriel Thornes
#
# Last Updated: 30/10/2025
#
# This script::
#   1. Takes wide correlation matrix following soft thresholding as input
#   2. Calculates network-level metrics
#   3. Outputs network metrics and gene metrics as summary statistics CSV file
# ==============================================================================

rm(list = ls())

# ----- 1. Load required packages -----
library(data.table)
library(dplyr)
library(tidyr)
library(WGCNA)
library(yaml)

# ----- 2. Set Input and Output Paths from config.yaml -----
source("src/utils/utils_io.R")
source("src/utils/utils_network_feats.R")
config <- yaml::read_yaml("config/config.yaml")
sft_input_dir <- config$network_feature_files$soft_threshold_files
spearman_input_dir <- config$spearman_correlation_files$permutation_files
spearman_input_file <- file.path(spearman_input_dir, "sig_matrix_wide.csv")
adjacency_output_dir <- file.path(config$output_dirs$network_features_dir, "/features_calc/adjacency")
sum_output_dir <- file.path(config$output_dirs$network_features_dir, "/features_calc")

spearman <- read.csv(file.path(spearman_input_file))
adjacency <- read.csv(file.path(sft_input_dir))
cat("Files read successfully:\n")
cat("- Spearman correlation matrix:", nrow(spearman), "x", ncol(spearman), "\n")
cat("- Adjacency matrix:", nrow(adjacency), "x", ncol(adjacency), "\n")

# Create output directory if it doesn't exist
create_directories(sum_output_dir)

# ----- 3. Calculate network-level summary statistics -----

# Convert matrices to proper format
spearman_matrix <- as.matrix(spearman[,-1])
rownames(spearman_matrix) <- spearman[[1]]
colnames(spearman_matrix) <- spearman[[1]]

adjacency_matrix <- as.matrix(adjacency[,-1])
rownames(adjacency_matrix) <- adjacency[[1]]
colnames(adjacency_matrix) <- adjacency[[1]]

cat("Matrix conversion completed:\n")
cat("- Spearman matrix dimensions:", dim(spearman_matrix), "\n")
cat("- Adjacency matrix dimensions:", dim(adjacency_matrix), "\n")

# Calculate metrics for matrices
spearman_metrics <- calculate_network_metrics(spearman_matrix, "Spearman Correlations", connection_threshold = 0.5)
adjacency_metrics <- calculate_network_metrics(adjacency_matrix, "Soft-Thresholded Adjacency", connection_threshold = 0.2)

# Create summary data frame for export
summary_stats <- data.frame(
    Matrix_Type = c("Spearman", "Adjacency"),
    Mean_Abs_Correlation = c(spearman_metrics$mean_abs_corr, 
                            adjacency_metrics$mean_abs_corr),
    Median_Abs_Correlation = c(spearman_metrics$median_abs_corr, 
                              adjacency_metrics$median_abs_corr),
    Max_Correlation = c(spearman_metrics$max_corr, 
                       adjacency_metrics$max_corr),
    Min_Correlation = c(spearman_metrics$min_corr, 
                       adjacency_metrics$min_corr),
    Mean_Connectivity = c(mean(spearman_metrics$weighted_connectivity, na.rm = TRUE),
                         mean(adjacency_metrics$weighted_connectivity, na.rm = TRUE)),
    Mean_Degree = c(mean(spearman_metrics$degree, na.rm = TRUE),
                   mean(adjacency_metrics$degree, na.rm = TRUE))
)

# Save summary statistics
summary_file <- file.path(sum_output_dir, "network_metrics_summary.csv")
write.csv(summary_stats, file = summary_file, row.names = FALSE)

cat("\n=== Summary ===\n")
print(summary_stats)
cat("\nSummary statistics saved to:", summary_file, "\n")

plot_threshold_analysis(spearman_matrix, output_file = file.path(sum_output_dir, "spearman_threshold_analysis.pdf"), threshold_range = seq(0.05, 0.95, by=0.05),
                        matrix_name = "Spearman Correlation Matrix")

plot_threshold_analysis(adjacency_matrix, output_file = file.path(sum_output_dir, "adjacency_threshold_analysis.pdf"), threshold_range = seq(0.05, 0.95, by=0.05),
                        matrix_name = "Adjacency Matrix")

# ----- 4. Calculate gene-level network features via WGCNA -----

# Create output directories
create_directories(adjacency_output_dir) 
create_directories(sum_output_dir)

# WGCNA Module Detection and Hub Gene Identification

# Create modules for adjacency network
cat("\n=== Processing Adjacency Network ===\n")
adjacency_modules <- create_modules(
    adjacency_matrix = adjacency_matrix,
    min_module_size = 30,
    merge_threshold = 0.25,
    deep_split = 2,
    output_dir = adjacency_output_dir,
    save_plots = TRUE
)

# Identify hub genes for adjacency network
cat("\n=== Identifying Hub Genes - Adjacency Network ===\n")
adjacency_hubs <- identify_hubs(
    module_results = adjacency_modules,
    top_n_hubs = 5,
    output_dir = adjacency_output_dir,
    save_files = TRUE
)

# Save TOM matrices (from the module results)
tom_adjacency_file <- file.path(adjacency_output_dir, "tom_adjacency_matrix.csv")
tomd_adjacency_file <- file.path(adjacency_output_dir, "tomd_adjacency_matrix.csv")

write.csv(adjacency_modules$tom_matrix, file = tom_adjacency_file, row.names = TRUE)
write.csv(adjacency_modules$tomd_matrix, file = tomd_adjacency_file, row.names = TRUE)

cat("TOM matrices saved:\n")
cat("- TOM Adjacency matrix:", tom_adjacency_file, "\n")
cat("- TOMD Adjacency matrix:", tomd_adjacency_file, "\n")

cat("Network features analysis complete. Results saved to:", sum_output_dir, "\n")